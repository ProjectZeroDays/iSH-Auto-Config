#!/bin/ash
# 
# License: GNU public
# Creator: Project Zero Days
# Github:  https://Github.com/ProjectZeroDays
# Website: https://ProjectZeroDays.com
# Email:   Info@ProjectZeroDays.com
# Secure:  ProjectZeroDays@pm.me
# Twitter: ProjectZeroDays
# Reddit:  ProjectZeroDays
# DEV:     ProjectZeroDays 
# 
printf "This Autoconfigures Alpine For iSH By Installing Package Managers, Develpment Tools, and Modifying System Configurations to Their iSH (Re)installation."
# 
printf "Installation and Configurations For OpenSSH, python3, Pip, Pipx, Bpkg, Pacman, PipEnv, SSH, VNC, Ruby, and much more!"
# 
echo -e "$OKBLUE[*]$RESET Set Root Password $RESET"
# 
passwd root 
#
echo -e "$OKBLUE[*]$RESET Non-Priveledged Account to Install Homebrew...$RESET"
# 
adduser nonpriv -G root
# 
passwd nonpriv 
# 
printf "Adding Location Daemon in the Background to maintain active shell allows Persistent Connections even When iSH is not open..."
# 
ln -s /dev $(dirname $0)/dev/
# 
printf "Select 'Always allow'."
# 
cat $(dirname $0)/dev/location > $(dirname $0)/dev/null & #! 
# 
printf "Updating and Upgrading Alpine in iSH..."
# 
apk update
# 
apk upgrade 
# 
printf "Installing Dependencies..."
# 
apk add && 
    bash \ 
    sudo \
    curl \
    wget \
    fish \
    zsh \
    automake \
    git \
    lua \
    cmake \
    archivemount \
    make \
    autoconf \
    clang \
    cython \
    cmake-bash-completion \
    extra-cmake-modules \
    automake \
    go \
    perl \
    ruby \
    php \
    wine \
    wine-dev \
    makeit \
    gcc \
    imake \
    alpine-make-vm-image \
    makedepend \
    openssh \
    openssh-client \
    gccmakedep \
    bmake \
    kbuild \
    qt \
    pacman \
    moreutils \
    py3-pip \
    py3-pip-bash-completion \
    python2.7 \
    python3 \
    libvirt-client \
    ncurses5-libs \
    gettext \
    nano \
    x11vnc \
    sudo \
    makedepend \
    gzip \
    xvfb \
    xterm \
    db && \
# 
printf "Switching to Bash..."
# 
/bin/bash
# 
printf "Downloading Configurations File for Aliases To Run at Startup"
# 
wget https://raw.githubusercontent.com/ProjectZeroDays/iSH-Auto-Config/master/CONFIG/ALIASES 
# 
printf "Adding Aliases to /etc/profile.d and Changing The Name to 'ALIASES.sh' to Run at Startup..."
# 
cp -r ALIASES /etc/profile.d
# 
printf "Renaming ALIASES to ALIASES.sh"
# 
mv /etc/profile.d/ALIASES /etc/profile.d/ALIASES.sh
# 
printf "Making ALIASES.sh Executable"
# 
chmod +X /etc/profile.d/ALIASES.sh
# 
printf "Adding Mounted Folder to Mount $SYSROOT or other Directories in iSH..."
# 
mkdir /mnt/mounted 
# 
printf "Installing BPKG (Bash Pakage Manager)"
# 
curl -Lo- "https://raw.githubusercontent.com/bpkg/bpkg/master/setup.sh" | bash 
# 
bpkg apt-get install cha87de/bashutil -g 
# 
printf "Configuring SSH for your system..."
# 
printf "Generating SSH Key..."
# 
ssh-keygen -A 
# 
printf "Generating SSH Password..."
# 
passwd 
# 
printf "Setting up VNC..."
# 
printf "In Order to Set A Password to Connect to VNC Server:"
# 
printf "x11vnc -rfbauth ~/.vnc/passwd"
# 
printf "Use Your Own VNC Passwd File:"
# 
printf "x11vnc -rfbauth /PATH/file"
# 
printf "Disable Password Usage:"
# 
printf "-nopw"
# 
printf "To Use x11VNC SSL Tunneling:"
# 
printf "-ssl -stunnel"
# 
printf "Documentation for x11VNC SSH Tunneling:"
# 
printf "http://www.karlrunge.com/x11vnc#tunnelling"
# 
printf "To Start VNC without SSL:"
# 
printf "127.0.0.1:5900"
printf "0.0.0.0:5900"
printf "localhost:0"
printf "::0"
#
#
printf "Start With SSL use the following:"
#
printf "127.0.0.1:5901"
printf "0.0.0.0:5901"
printf "localhost:1"
printf "::1"
#
printf "To Open Using URI Scheme Use:"
#
printf "VNC:// as a prefix to IP:Port"
#
printf "VNC://127.0.0.1:5900"
printf "VNC://0.0.0.0:5900"
printf "VNC://localhost:0"
#
printf "To open with tunneling use:"
#
printf "VNC://127.0.0.1:5901"
printf "VNC://0.0.0.0:5901"
printf "VNC://localhost:1"
#
x11vnc -rfbauth -usepw -ssl -stunnel "~/.vnc/passwd" & 
#
printf "...and we are done!"
#
printf "Enjoy!"
